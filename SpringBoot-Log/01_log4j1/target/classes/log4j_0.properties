

#把经常用的变量就行抽取，在后期好进行修改
encoding=UTF-8
pattern=%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] [%t]: %m%n
#全局配置
# TRACE：显示的等级，一共有七种，一般时包含自身和比自身等级高的 OFF:关闭日志
# console：输出目标，自定义
log4j.rootLogger=TRACE, console

#定义子Logger
#log4j.logger.com.gyf.Test=INFO, console
#log4j.logger.com.gyf.main=TRACE, console

#定义在类上 子logger会默认继承父logger的appender
#log4j.logger.com.gyf.Test.TestLog4j1_02=INFO, console
#log4j.logger.com.gyf.Test.TestLog4j1_03=TRACE, console

#不想继承父logger的appender，就使用additivity关键字设置为false
#log4j.additivity.com.gyf.Test.TestLog4j1_03=false




#Appender：输出目标，是输出到控制台还是输出到文件
#log4j.appender.名称=Appender的类型
#ConsoleAppender:输出到控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender

#设置输出的编码格式
log4j.appender.console.encoding=${encoding}

#layout：输出格式 ;布局
log4j.appender.console.layout=org.apache.log4j.PatternLayout
#conversionPattern：日志信息格式
# %d{yyyy-MM-dd HH:mm:ss.SSS}:时间 2021-11-08 15:25:40.225
# [%-5p]：日志级别
# [%t]:thread 线程
# %m :message 日志消息
# %n :换行
# %c:
#log4j.appender.console.layout.conversionPattern=${pattern}

#如果后面的值太长了，可以使用“\”进行换行，注意“\”后面不可以后任何东西，后面是对下一行进行的拼接
log4j.appender.console.layout.conversionPattern=\
%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] [%t]: %m%n